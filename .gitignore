# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is not recommended to exclude the .idea/ directory, as it may contain
#  settings specific to your project.
.idea/

# VS Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Django specific
*.log
local_settings.py
staticfiles/
static_collected/
media/uploads/
media/cache/

# Database
*.sqlite3
*.db

# Environment variables
.env
.env.local
.env.production
.env.staging

# Temporary files and directories
temp/
tmp/
*.tmp
*.temp

# Uploaded files (if not using cloud storage)
media/documents/
media/uploads/

# AI/ML model files
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.pb
models/
checkpoints/

# Cache directories
.cache/
cache/
__pycache__/
.pytest_cache/

# Logs
logs/
*.log
*.log.*

# Node.js (if using frontend build tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn-integrity

# Docker
docker-compose.override.yml
.docker/

# Redis dumps
dump.rdb

# Celery
celerybeat-schedule.db

# Local configuration files
local_config.py
local_settings.py

# Backup files
*.backup
*.bak
*.orig

# IDE files
.vscode/
.idea/
*.swp
*.swo

# Session files
sessions/

# Temporary artifacts
artifacts/
temp_artifacts/

# Test files
test_files/generated/
test_outputs/

# Coverage reports
htmlcov/
.coverage
coverage.xml

# Profiling
.prof

# Documentation builds
docs/_build/
docs/build/

# Translations
locale/*/LC_MESSAGES/*.mo

# Security
*.pem
*.key
*.crt
*.p12
secrets.json

# Production settings
production_settings.py
staging_settings.py

# Local development overrides
settings_local.py
local.py

# Thumbnails
.thumbnails/

# Generated files
generated/
auto_generated/
temp/

# Excel/Word temporary files
~$*.xlsx
~$*.docx
~$*.pptx

# PDF temporary files
*.pdf.tmp

# Matplotlib cache
.matplotlib/

# Jupyter
.jupyter/

# IPython
.ipython/

# Backup directories
backups/
backup/

# Archive files
*.zip
*.tar
*.tar.gz
*.tar.bz2
*.tar.xz
*.rar
*.7z

# System files
.DS_Store
Thumbs.db
desktop.ini

# Temporary Django migrations (uncomment if needed)
# */migrations/00*.py
# !*/migrations/__init__.py

# Local SQLite database
local.sqlite3
development.sqlite3
test.sqlite3

# Redis
dump.rdb

# Flower (Celery monitoring)
flower.db

# Gunicorn
gunicorn.log
gunicorn.pid